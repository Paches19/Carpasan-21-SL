version: '3.8'
services:
  nginx:
    build:
      context: ./
      dockerfile: ./data/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/nginx-ssl.conf:/etc/nginx/nginx-ssl.conf
      - ./data/nginx/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      - ./data/certbot/www:/var/www/certbot
      - ./data/certbot/conf:/etc/letsencrypt
      - ./web:/usr/share/nginx/html/static
    command: ["/bin/bash", "-c", "nginx -g 'daemon off;' & /init.sh"]
    networks:
      - carpasan_network
    restart: always

  nginx-react:
    build:
      context: ./
      dockerfile: ./nginx-react/Dockerfile
    ports:
      - "2080:2080"
    networks:
      - carpasan_network
    restart: always

  order-server:
    build:
      context: ./order-server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - mysql
    networks:
      - carpasan_network
    restart: always

  web-server:
    build:
      context: ./web-server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - carpasan_network
    restart: always

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/init/:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - carpasan_network
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/www:/var/www/certbot
      - ./data/certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - carpasan_network

networks:
  carpasan_network:
    driver: bridge

volumes:
  db-data:
  certbot_www:
  certbot_conf: